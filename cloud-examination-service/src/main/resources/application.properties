
spring.application.name=cloud-examination-service

server.port=2224


eureka.client.serviceUrl.defaultZone=http://192.168.1.201:1113/eureka/
#eureka.client.serviceUrl.defaultZone=http://172.17.216.54:1113/eureka/
#eureka.client.serviceUrl.defaultZone=http://47.95.221.160:1113/eureka/
#eureka.client.serviceUrl.defaultZone=http://localhost:1113/eureka/
#eureka.client.serviceUrl.defaultZone=http://localhost:${server.port}/eureka/

#此配置建议只试用开发和测试环境
#心跳间隔时间,默认是30秒
#org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean.leaseRenewalIntervalInSeconds
eureka.instance.leaseRenewalIntervalInSeconds=3
#最后一次心跳时间后leaseExpirationDurationInSeconds秒就认为是下线了，默认是90秒
#org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean.leaseExpirationDurationInSeconds
eureka.instance.leaseExpirationDurationInSeconds=6

#master\u6570\u636E\u6E90
spring.datasource.master.url=jdbc:mysql://192.168.1.201:3306/springbootmaster?useSSL=false&amp;serverTimezone=GMT
spring.datasource.master.username=sa
spring.datasource.master.password=1qaz@WSX
spring.datasource.master.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.master.masterMapperLocations=classpath:mybatis/mapper/master/*.xml

#cluster数据源 
#spring.datasource.cluster.url=jdbc:mysql://47.95.219.161:3306/uva_class_room_dev?useSSL=false&amp;serverTimezone=GMT
#spring.datasource.cluster.url=jdbc:mysql://172.17.216.55:3306/uva_class_room_dev?useSSL=false&amp;serverTimezone=GMT
spring.datasource.cluster.url=jdbc:mysql://192.168.1.201:3306/uva_examesitions?useSSL=false&amp;serverTimezone=GMT
spring.datasource.cluster.username=sa
#spring.datasource.cluster.password=nishizhu!QAZ,./1
spring.datasource.cluster.password=1qaz@WSX
spring.datasource.cluster.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.cluster.clusterMapperLocations=classpath:mybatis/mapper/cluster/*/*.xml


#cluster1数据源
spring.datasource.cluster1.url=jdbc:mysql://192.168.1.201:3306/SpringBootMaster?useSSL=false&amp;serverTimezone=GMT
spring.datasource.cluster1.username=sa
spring.datasource.cluster1.password=1qaz@WSX
spring.datasource.cluster1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.cluster1.clusterMapperLocations=classpath:mybatis/mapper/cluster1/*/*.xml


#write数据源
spring.datasource.write.url=jdbc:mysql://192.168.1.201:3306/SpringBootMaster
spring.datasource.write.username=sa
spring.datasource.write.password=1qaz@WSX
spring.datasource.write.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.write.writeMapperLocations=classpath:mybatis/mapper/master/*.xml

#read数据源1
spring.datasource.read1.url=jdbc:mysql://192.168.1.201:3306/SpringBootMaster
spring.datasource.read1.username=sa
spring.datasource.read1.password=1qaz@WSX
spring.datasource.read1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.read1.read1MapperLocations=classpath:mybatis/mapper/cluster/*.xml


#read数据源2
spring.datasource.read2.url=jdbc:mysql://192.168.1.201:3306/SpringBootMaster
spring.datasource.read2.username=sa
spring.datasource.read2.password=1qaz@WSX
spring.datasource.read2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.read2.read2MapperLocations=classpath:mybatis/mapper/cluster1/*.xml

#spring.mail.host=smtp.126.com  
#spring.mail.username=fightiforever@126.com  
#spring.mail.password=4111457a
#spring.mail.default-encoding=UTF-8  



#druid其它配置
#dataSource
# 初始化大小，最小，最大
spring.datasource.druid.initialSize=5
spring.datasource.druid.minIdle=5
spring.datasource.druid.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.druid.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.minEvictableIdleTimeMillis=300000
spring.datasource.druid.validationQuery=SELECT 1 FROM DUAL
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnBorrow=false
spring.datasource.druid.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.poolPreparedStatements=true
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filters=stat,wall
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true
dfs-filesystem=http://192.168.1.202:8888/









