<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.singFly</groupId>
		<artifactId>cloud-examination-parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../cloud-examination-parent/pom.xml</relativePath>
	</parent>

	<artifactId>cloud-examination-entity</artifactId>
	<name>cloud-examination-entity</name>
	<packaging>jar</packaging>
	<url>http://maven.apache.org</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<!--配置打包时不过滤非java文件开始 -->
		<!-- 说明，在进行模块化开发打jar包时，maven会将非java文件过滤掉，xml,properties配置文件等，但是这些文件又是必需的，使用此配置可以在打包时将不会过滤这些必需的配置文件。 -->
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
				</includes>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
				</includes>
				<filtering>false</filtering>
			</resource>
		</resources>
		<!--配置打包时不过滤非java文件结束 -->
		<pluginManagement>
			<plugins>
				<!-- <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>aspectj-maven-plugin</artifactId> 
					<configuration> <aspectLibraries> <aspectLibrary> <groupId>org.springframework</groupId> 
					<artifactId>spring-aspects</artifactId> </aspectLibrary> </aspectLibraries> 
					</configuration> </plugin> -->

				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<configuration>
						<classifier>exec</classifier>
					</configuration>
				</plugin>

			</plugins>
		</pluginManagement>
	</build>
</project>
