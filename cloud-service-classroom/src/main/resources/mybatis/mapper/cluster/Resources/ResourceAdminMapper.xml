<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cloud.service.classroom.dao.cluster.ResourceAdminDao">
	<resultMap id="BaseResultMap" type="cloud.entity.classroom.Resources.Resources">
		<result column="Id" jdbcType="INTEGER" property="id" />
		<result column="ParentId" jdbcType="INTEGER" property="parentid" />
		<result column="IsDocument" jdbcType="BIT" property="isdocument" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="Types" jdbcType="INTEGER" property="types" />
		<result column="Icon" jdbcType="VARCHAR" property="icon" />
		<result column="CreateAuthor" jdbcType="VARCHAR" property="createauthor" />
		<result column="UserId" jdbcType="INTEGER" property="userid" />
		<result column="ResourcePath" jdbcType="VARCHAR" property="resourcepath" />
		<result column="describes" jdbcType="VARCHAR" property="describes" />
		<result column="scores" jdbcType="FLOAT" property="scores" />
		<result column="ClickCount" jdbcType="INTEGER" property="clickcount" />
		<result column="IsOpen" jdbcType="BIT" property="isopen" />
		<result column="imgsrc" jdbcType="VARCHAR" property="imgsrc" />
		<result column="status" jdbcType="TINYINT" property="status" />
		<result column="CreateTIme" jdbcType="TIMESTAMP" property="createtime" />
		<result column="Contents" jdbcType="LONGVARCHAR" property="contents" />
		<result column="sort" jdbcType="INTEGER" property="sort"/>
	</resultMap>
	<insert id="insert" parameterType="cloud.entity.classroom.Resources.Resources">
		insert into resources (Id,
		ParentId, IsDocument,
		name, Types, Icon,
		CreateAuthor, UserId,
		ResourcePath,
		describes, scores, ClickCount,
		IsOpen, imgsrc, status,
		CreateTIme, Contents, sort)
		values (#{id,jdbcType=INTEGER},
		#{parentid,jdbcType=INTEGER},
		#{isdocument,jdbcType=BIT},
		#{name,jdbcType=VARCHAR}, #{types,jdbcType=INTEGER},
		#{icon,jdbcType=VARCHAR},
		#{createauthor,jdbcType=VARCHAR},
		#{userid,jdbcType=INTEGER},
		#{resourcepath,jdbcType=VARCHAR},
		#{describes,jdbcType=VARCHAR}, #{scores,jdbcType=FLOAT},
		#{clickcount,jdbcType=INTEGER},
		#{isopen,jdbcType=BIT},
		#{imgsrc,jdbcType=VARCHAR},
		#{status,jdbcType=TINYINT},
		#{createtime,jdbcType=DATE}, #{contents,jdbcType=LONGVARCHAR},
		#{sort,jdbcType=INTEGER})
	</insert>
	
	<insert id="insertfile" parameterType="cloud.entity.classroom.Resources.Resources">
		insert into resources (Id,
		ParentId, IsDocument,
		name, Types,
		CreateAuthor, UserId,
		scores, ClickCount,
		IsOpen, status,
		CreateTIme, sort)
		values (#{id,jdbcType=INTEGER},
		#{parentid,jdbcType=INTEGER}, #{isdocument,jdbcType=BIT},
		#{name,jdbcType=VARCHAR}, #{types,jdbcType=INTEGER},
		#{createauthor,jdbcType=VARCHAR},
		#{userid,jdbcType=INTEGER},
		#{clickcount,jdbcType=INTEGER},
		#{isopen,jdbcType=BIT},
		#{status,jdbcType=TINYINT},
		#{createtime,jdbcType=DATE},
		#{sort,jdbcType=INTEGER})
	</insert>
	
	<insert id = "uploadfiles" parameterType="cloud.entity.classroom.Resources.Resources">
		insert into resources (Id,
		ParentId, IsDocument,
		name, Types,
		CreateAuthor, UserId,
		ResourcePath,
		describes, ClickCount,
		IsOpen, imgsrc, status,
		CreateTIme, sort)
		values (#{id,jdbcType=INTEGER},
		#{parentid,jdbcType=INTEGER},
		#{isdocument,jdbcType=BIT},
		#{name,jdbcType=VARCHAR}, #{types,jdbcType=INTEGER},
		#{createauthor,jdbcType=VARCHAR},
		#{userid,jdbcType=INTEGER},
		#{resourcepath,jdbcType=VARCHAR},
		#{describes,jdbcType=VARCHAR},
		#{clickcount,jdbcType=INTEGER},
		#{isopen,jdbcType=BIT},
		#{imgsrc,jdbcType=VARCHAR},
		#{status,jdbcType=TINYINT},
		#{createtime,jdbcType=DATE},
		#{sort,jdbcType=INTEGER})
	</insert>
	
	<insert id = "uploadtext" parameterType="cloud.entity.classroom.Resources.Resources">
		insert into resources (Id,
		ParentId, IsDocument,
		name, Types,
		CreateAuthor, UserId,
		describes, ClickCount,
		IsOpen, imgsrc, status,
		CreateTIme, Contents, sort)
		values (#{id,jdbcType=INTEGER},
		#{parentid,jdbcType=INTEGER},
		#{isdocument,jdbcType=BIT},
		#{name,jdbcType=VARCHAR}, #{types,jdbcType=INTEGER},
		#{createauthor,jdbcType=VARCHAR},
		#{userid,jdbcType=INTEGER},
		#{describes,jdbcType=VARCHAR},
		#{clickcount,jdbcType=INTEGER},
		#{isopen,jdbcType=BIT},
		#{imgsrc,jdbcType=VARCHAR},
		#{status,jdbcType=TINYINT},
		#{createtime,jdbcType=DATE}, #{contents,jdbcType=LONGVARCHAR},
		#{sort,jdbcType=INTEGER})
	</insert>

	<delete id="delete" parameterType="cloud.entity.classroom.Resources.Resources">
		delete from resources
		where Id in
		<foreach item="id" collection="list" open="(" separator="," close=")">
			#{id}</foreach>
	</delete>
	
	<select id="getContent" resultMap="BaseResultMap">
		select Contents
		from resources
		where Id=#{id};
	</select>

	<update id="changeResources" parameterType="cloud.entity.classroom.Resources.Resources">
		update resources set
		"name"=#{name},describes=#{describes},imgsrc=#{imgsrc},sort=#{sort}
		where Id=#{id};
	</update>
	
	<update id="changefile" parameterType="cloud.entity.classroom.Resources.Resources">
		update resources set
		"name"=#{name},sort=#{sort}
		where Id=#{id};
	</update>

	<update id="checkResources" parameterType="cloud.entity.classroom.Resources.Resources">
		update resources set
		status=#{status}
		where Id=#{id};
	</update>

    <update id="changeResourcesText" parameterType="cloud.entity.classroom.Resources.Resources">
		update resources set                             
		"name"=#{name},describes=#{describes},imgsrc=#{imgsrc},sort=#{sort},Contents=#{contents}
		where Id=#{id};
	</update>

	<select id="selectAll" resultMap="BaseResultMap">
		select Id, ParentId,
		IsDocument, name, Types, Icon, CreateAuthor, UserId,
		ResourcePath,
		describes, scores, ClickCount, IsOpen, imgsrc, status, CreateTIme,
		Contents, sort
		from resources
	</select>

</mapper>